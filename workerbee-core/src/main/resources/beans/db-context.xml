<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:data="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Component scan -->
    <context:component-scan base-package="com.nexr.workerbee">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Spring Data JPA -->
    <!--
    <data:repositories base-package="com.nexr.workerbee.repository"
                       factory-class="com.nexr.workerbee.repository.GenericRepositoryFactoryBean" />
    -->

    <!-- Property Placeholder Configurer -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:/db.properties" />
    </bean>

    <!-- Transaction Manager -->
    <bean name="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- datasource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${db.driverClassName}"
          p:url="${db.url}"
          p:username="${db.username}"
          p:password="${db.password}"
          p:initialSize="2"
          p:maxActive="5" />

    <!-- Entity Manager Factory -->
    <!--
    Usually, JPA defines a persistence unit through the META-INF/persistence.xml file. Starting with Spring 3.1,
    this XML file is no longer necessary – the LocalContainerEntityManagerFactoryBean now supports a ‘packagesToScan’ property where the packages to scan for @Entity classes can be specified.
    The persistence.xml file was the last piece of XML to be removed – now, JPA can be fully set up with no XML.
    -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${jpa.showSql}"/>
                <property name="generateDdl" value="${jpa.generateDdl}"/>
            </bean>
        </property>
        <property name="packagesToScan" value="com.nexr.workerbee.domain" />
    </bean>

    <!-- To inject Entity manager using the @PersistenceContext annotation. -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
</beans>
