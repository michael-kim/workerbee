<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
		
	<!-- enable @PreAuthorize and @PostAuthorize -->
	<global-method-security pre-post-annotations="enabled" />
	
	<http auto-config="true" use-expressions="true">
		<form-login
			login-page="/login"
			default-target-url="/messageList" 
			authentication-failure-url="/login?error=true"/>
		<logout 
			invalidate-session="true"
			logout-success-url="/login" />
		<remember-me key="workerbee_security_key" token-validity-seconds="-1"/>
	
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/messageList*" access="hasAnyRole('ROLE_USER','ROLE_ANONYMOUS')" />
		<intercept-url pattern="/messagePost*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/messageDelete*" access="hasRole('ROLE_ADMIN')" />
		
	</http>

	<!-- JdbcDaoImpl -->
	<beans:bean id="jdbcUserService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="enableGroups" value="false" />
		<beans:property name="enableAuthorities" value="true" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>SELECT USERNAME,PASSWORD,1 FROM USERS WHERE USERNAME=?</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>SELECT u.USERNAME,a.AUTHORITY FROM AUTHORITIES a JOIN USERS u ON a.USER_ID=u.ID WHERE u.USERNAME=?</beans:value>
		</beans:property>
	</beans:bean>

	<!-- Password Encoder -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	 
	 <!-- Authentication Manager-->
	<authentication-manager>
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
			
</beans:beans>
